# 通过 Github actions， 在 Github 仓库的每一次 commit 后自动同步到 Gitee 上.
name: sync2gitee
on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
  workflow_dispatch:
jobs:
  repo-sync:
    env:
      dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
      dst_token: ${{ secrets.GITEE_TOKEN }}
      gitee_user: ${{ secrets.GITEE_USER }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Pull changes from Gitee
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote add gitee git@gitee.com:${{ secrets.GITEE_USER }}/collect-tv-txt.git
          git fetch gitee
          git pull gitee main --rebase

      - name: Check file timestamps
        run: |
          git fetch gitee
          if [ $(git log -1 --format=%ct) -gt $(git log gitee/main -1 --format=%ct) ]; then
            echo "GitHub has newer changes, forcing push"
            FORCE_PUSH="--force"
          else
            echo "Gitee is up to date, no force push needed"
            FORCE_PUSH=""
          fi

      - name: sync github -> gitee
        uses: Yikun/hub-mirror-action@master
        if: env.dst_key && env.dst_token && env.gitee_user
        with:
          force: ${{ env.FORCE_PUSH }}
          # 必选，需要同步的 Github 用户（源）
          src: 'github/${{ github.repository_owner }}'
          # 必选，需要同步到的 Gitee 用户（目的）
          dst: 'gitee/${{ secrets.GITEE_USER }}'
          # 必选，Gitee公钥对应的私钥，https://gitee.com/profile/sshkeys
          dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
          # 必选，Gitee对应的用于创建仓库的token，https://gitee.com/profile/personal_access_tokens
          dst_token:  ${{ secrets.GITEE_TOKEN }}
          # 如果是组织，指定组织即可，默认为用户 user
          account_type: user
          # 直接取当前项目的仓库名
          static_list: ${{ github.event.repository.name }}
          # 还有黑、白名单，静态名单机制，可以用于更新某些指定库
          # static_list: 'repo_name,repo_name2'
          # black_list: 'repo_name,repo_name2'
          # white_list: 'repo_name,repo_name2'